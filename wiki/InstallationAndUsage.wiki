#summary Installation and usage instructions.

= Installation =

Do a SVN Checkout from https://cobertura-coverage-for-war.googlecode.com/svn/trunk

= What you need =

  * Ant
  * Groovy
  * War file to be instrumented

= Assumption =
  * Basic knowledge about how Cobertura works and what it means to instrument java byte code
  * This has been tested only for Tomcat 

= Usage =
This runs as an Ant script. So each command is a separate ant target.

E.g. ant command

There is a property file that comes along with it. 'cobertura.properties'. This property file needs to be modified to match your local folder structure,war file name, etc.

== Cobertura.properties ==
 * coveragereport.dir=./report     *<-The folder where the HTML report will be generated to*
 * src.dir=/path/to/src/main/java *<- Path to the src folder*
 * war.dir=/path/to/dist *<- Path to the war file*
 * war.file=application.war *<- Name of the war file*
 * instrumented.dir=./instrumented *<- Temp folder, where the instrumented file will be generated to*
 * include.regex={{{.*\.mypackage.*}}} *<- Classes that are to be instrumented. You can use any regex.*


== 1. Instrument ==
This step takes a war file as input and will then generate a war file instrumented with Cobertura. All the jar files in the war file will be instrumented (You can control what _not_ to instrument though)

*Input* : 
          # War file to be instrumented

*Output*: 
          # Instrumented war file
          # cobertura.ser file generated by Cobertura

*command*: ant instrument


== 2. Test the application ==
Test the application by running manual tests or automated tests.

The .ser file generated during the instrumentation phase *must* be put in the tomcat\bin folder. Otherwise a new .ser file will be created by the web application and that cannot be used to create a coverage report.

*Input* :  
          # Instrumented war file
          # .ser file generated by Cobertura

*Output*: 
          # cobertura.ser file updated by the web application

== 3. Generating report ==

Now its time to generate the coverage report.

*NOTE*: You will have to shut down Tomcat to get all updates persisted to the .ser file

*Input* :  
          # cobertura.ser file updated by the web application

*Output*: 
          # HTML report

*command*: ant report